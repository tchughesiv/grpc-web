version: '3'
services:
  prereqs:
    build:
      context: ./
      dockerfile: ./net/grpc/gateway/docker/prereqs/Dockerfile
    image: grpcweb/prereqs
  echo-server:
    build:
      context: ./
      dockerfile: ./net/grpc/gateway/docker/echo_server/Dockerfile
    depends_on:
      - prereqs
    image: grpcweb/echo-server
    ports:
      - "9090:9090"
  node-server:
    build:
      context: ./
      dockerfile: ./net/grpc/gateway/docker/node_server/Dockerfile
    depends_on:
      - prereqs
    image: grpcweb/node-server
    ports:
      - "9090:9090"
  node-interop-server:
    build:
      context: ./
      dockerfile: ./net/grpc/gateway/docker/node_interop_server/Dockerfile
    image: grpcweb/node-interop-server
    ports:
      - "7074:7074"
  envoy:
    build:
      context: ./
      dockerfile: ./net/grpc/gateway/docker/envoy/Dockerfile
    image: grpcweb/envoy
    ports:
      - "8080:8080"
    links:
      - node-server
  grpcwebproxy:
    build:
      context: ./
      dockerfile: ./net/grpc/gateway/docker/grpcwebproxy/Dockerfile
    image: grpcweb/grpcwebproxy
    ports:
      - "8080:8080"
    links:
      - node-server
  commonjs-client:
    build:
      context: ./
      dockerfile: ./net/grpc/gateway/docker/commonjs_client/Dockerfile
    depends_on:
      - prereqs
    image: grpcweb/commonjs-client
    ports:
      - "8081:8081"
  closure-client:
    build:
      context: ./
      dockerfile: ./net/grpc/gateway/docker/closure_client/Dockerfile
    depends_on:
      - prereqs
    image: grpcweb/closure-client
    ports:
      - "8081:8081"
  ts-client:
    build:
      context: ./
      dockerfile: ./net/grpc/gateway/docker/ts_client/Dockerfile
    depends_on:
      - prereqs
    image: grpcweb/ts-client
    ports:
      - "8081:8081"
  binary-client:
    build:
      context: ./
      dockerfile: ./net/grpc/gateway/docker/binary_client/Dockerfile
    depends_on:
      - prereqs
    image: grpcweb/binary-client
    ports:
      - "8081:8081"
  interop-client:
    build:
      context: ./
      dockerfile: ./net/grpc/gateway/docker/interop_client/Dockerfile
    depends_on:
      - prereqs
    image: grpcweb/interop-client
    ports:
      - "8081:8081"
  protoc-plugin:
    build:
      context: ./
      dockerfile: ./net/grpc/gateway/docker/protoc_plugin/Dockerfile
    depends_on:
      - prereqs
    image: grpcweb/protoc-plugin
  jsunit-test:
    build:
      context: ./
      dockerfile: ./packages/grpc-web/docker/jsunit-test/Dockerfile
    image: grpcweb/jsunit-test
  feast-envoy:
    build:
      context: ./
      dockerfile: ./net/grpc/gateway/docker/feast_envoy/Dockerfile
    image: grpcweb/envoy
    ports:
      - "8080:8080"
      - "8082:8082"
      - "9901:9901"
    links:
      - feature-registry
  feastjs-client:
    build:
      context: ./
      dockerfile: ./net/grpc/gateway/docker/feastjs_client/Dockerfile
    image: grpcweb/feastjs-client
    ports:
      - "8081:8081"
  feature-registry:
    command: feast serve_registry
    environment:
      FEATURE_STORE_YAML_BASE64: "cHJvamVjdDogbXlfcHJvamVjdAojIEJ5IGRlZmF1bHQsIHRoZSByZWdpc3RyeSBpcyBhIGZpbGUgKGJ1dCBjYW4gYmUgdHVybmVkIGludG8gYSBtb3JlIHNjYWxhYmxlIFNRTC1iYWNrZWQgcmVnaXN0cnkpCnJlZ2lzdHJ5OiBkYXRhL3JlZ2lzdHJ5LmRiCiMgVGhlIHByb3ZpZGVyIHByaW1hcmlseSBzcGVjaWZpZXMgZGVmYXVsdCBvZmZsaW5lIC8gb25saW5lIHN0b3JlcyAmIHN0b3JpbmcgdGhlIHJlZ2lzdHJ5IGluIGEgZ2l2ZW4gY2xvdWQKcHJvdmlkZXI6IGxvY2FsCm9ubGluZV9zdG9yZToKICAgIHR5cGU6IHNxbGl0ZQogICAgcGF0aDogZGF0YS9vbmxpbmVfc3RvcmUuZGIKZW50aXR5X2tleV9zZXJpYWxpemF0aW9uX3ZlcnNpb246IDIK"
    ports:
      - "6570:6570"
    image: quay.io/tchughesiv/feature-server:0.39.0
